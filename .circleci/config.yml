#
#  Globality autogenerated CircleCI configuration
#
#  This file is auto generated with globality-build.
#  You should not make any changes to this file manually
#
#  Any changes made to this file will be overwritten in the
#  next version of the build.
#
#  See: http://github.com/globality-corp/globality-build
#
#

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: ${AWS_ECR_DOMAIN}/globality-build:2020.8.20
      aws_auth:
        aws_access_key_id: ${AWS_ACCESS_KEY_ID}
        aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
      environment:
        EXTRA_INDEX_URL: "InjectedDuringRuntime"
        AWS_ECR_DOMAIN: "InjectedDuringRuntime"
        JFROG_AUTH: "InjectedDuringRuntime"

deploy_defaults: &deploy_defaults
  working_directory: ~/repo
  docker:
    - image: ${AWS_ECR_DOMAIN}/globality-build:2020.8.20
      aws_auth:
        aws_access_key_id: ${AWS_ACCESS_KEY_ID}
        aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
      environment:
        EXTRA_INDEX_URL: "InjectedDuringRuntime"
        AWS_ECR_DOMAIN: "InjectedDuringRuntime"
        JFROG_AUTH: "InjectedDuringRuntime"


whitelist: &whitelist
  paths:
    .

version: 2

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  build_docker:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build Base Docker
          # install dependencies for loading ecs task definitions
          command: |
            eval $(aws ecr get-login --no-include-email)
            globality-build docker-build-push --repo cookiecutter-microcosm-sagemaker

  test:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - setup_remote_docker
      - run:
          name: Test code
          command: |
            docker create -v /src/cookiecutter_microcosm_sagemaker/tests/ --name service_tests alpine:3.4 /bin/true
            docker cp $(pwd)/cookiecutter_microcosm_sagemaker/tests service_tests:/src/cookiecutter_microcosm_sagemaker/
            eval $(aws ecr get-login --no-include-email)
            docker pull ${AWS_ECR_DOMAIN}/cookiecutter-microcosm-sagemaker:${CIRCLE_SHA1}
            docker run -it  --volumes-from service_tests ${AWS_ECR_DOMAIN}/cookiecutter-microcosm-sagemaker:${CIRCLE_SHA1} test
  lint:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - setup_remote_docker

      - run:
          name: Run Lint
          command: |
            docker create -v /src/cookiecutter_microcosm_sagemaker/tests/ --name service_tests alpine:3.4 /bin/true
            docker cp $(pwd)/cookiecutter_microcosm_sagemaker/tests service_tests:/src/cookiecutter_microcosm_sagemaker/
            eval $(aws ecr get-login --no-include-email)
            docker pull ${AWS_ECR_DOMAIN}/cookiecutter-microcosm-sagemaker:${CIRCLE_SHA1}
            docker run -it --volumes-from service_tests ${AWS_ECR_DOMAIN}/cookiecutter-microcosm-sagemaker:${CIRCLE_SHA1} lint

  typehinting:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - setup_remote_docker

      - run:
          name: Run Typehinting
          command: |
            docker create -v /src/cookiecutter_microcosm_sagemaker/tests/ --name service_tests alpine:3.4 /bin/true
            docker cp $(pwd)/cookiecutter_microcosm_sagemaker/tests service_tests:/src/cookiecutter_microcosm_sagemaker/
            eval $(aws ecr get-login --no-include-email)
            docker pull ${AWS_ECR_DOMAIN}/cookiecutter-microcosm-sagemaker:${CIRCLE_SHA1}
            docker run -it --volumes-from service_tests ${AWS_ECR_DOMAIN}/cookiecutter-microcosm-sagemaker:${CIRCLE_SHA1} typehinting
  deploy_owndev:
    <<: *deploy_defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker
      - run:
          name: Deploy owndev
          command: |
            export CLUSTER="service-owndev"
            export ENVIRONMENT=$(globality-build get-dev --branch ${CIRCLE_BRANCH})
            if [ -z "$ENVIRONMENT" ]
            then
                exit 0
            fi
            export NAME=cookiecutter-microcosm-sagemaker
            globality-build docker-tag \
                --service cookiecutter-microcosm-sagemaker \
                --sha ${CIRCLE_SHA1} \
                --tag ${CIRCLE_BRANCH//\//-}
            globality-build deploy --service $NAME --environment $ENVIRONMENT --sha ${CIRCLE_SHA1} --cluster $CLUSTER

  deploy_prod:
    <<: *deploy_defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker
      - run:
          name: Deploy prod
          command: |
            export CLUSTER="service-prod"
            export ENVIRONMENT=prod
            if [ -z "$ENVIRONMENT" ]
            then
                exit 0
            fi
            export NAME=cookiecutter-microcosm-sagemaker
            globality-build docker-tag \
                --service cookiecutter-microcosm-sagemaker \
                --sha ${CIRCLE_SHA1} \
                --tag master
            globality-build deploy --service $NAME --environment $ENVIRONMENT --sha ${CIRCLE_SHA1} --cluster $CLUSTER

  backup_ecr_prod:
    <<: *deploy_defaults
    steps:
      - setup_remote_docker
      - run:
          name: Backup ECR prod
          command: |
            DESTINATION_REGION=us-west-2
            eval $(aws ecr get-login --no-include-email)
            eval $(aws ecr get-login --no-include-email --region $DESTINATION_REGION)
            globality-build docker-duplicate \
                --service cookiecutter-microcosm-sagemaker \
                --tag master \
                --destination-region $DESTINATION_REGION \
                --no-dry-run
  deploy_test:
    <<: *deploy_defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker
      - run:
          name: Deploy test
          command: |
            export CLUSTER="service-test"
            export ENVIRONMENT=test
            if [ -z "$ENVIRONMENT" ]
            then
                exit 0
            fi
            export NAME=cookiecutter-microcosm-sagemaker
            globality-build docker-tag \
                --service cookiecutter-microcosm-sagemaker \
                --sha ${CIRCLE_SHA1} \
                --tag ${CIRCLE_BRANCH//\//-}
            globality-build deploy --service $NAME --environment $ENVIRONMENT --sha ${CIRCLE_SHA1} --cluster $CLUSTER



workflows:
  version: 2

  build-and-release:
    jobs:
      - checkout:
          filters:
            # run for all branches and tags
            tags:
              only: /.*/
      - build_docker:
          requires:
            - checkout
          filters:
            # run for all branches and tags
            tags:
              only: /.*/
      - test:
          requires:
            - build_docker
          filters:
            # run for all branches and tags
            tags:
              only: /.*/
      - lint:
          requires:
            - build_docker
          filters:
            # run for all branches and tags
            tags:
              only: /.*/
      - typehinting:
          requires:
            - build_docker
          filters:
            # run for all branches and tags
            tags:
              only: /.*/
      - deploy_owndev:
          requires:
            - test
            - lint
            - typehinting
          filters:
            branches:
              only: /.*/

      - deploy_prod:
          requires:
            - test
            - lint
            - typehinting
          filters:
            branches:
              only: master

      - backup_ecr_prod:
          requires:
            - deploy_prod
          filters:
            branches:
              only: master

      - deploy_test:
          requires:
            - test
            - lint
            - typehinting
          filters:
            branches:
              only: /release\/2[0-9]{3}\.[0-5]?[0-9]\.[0-9]{1,3}$/


